Paragraphs of Features:

1. (Deck)
2. (Moves) Blackjack does not have a complicated gameplay. It starts with two cards dealt to each player. The players then go around deciding whether they want additional cards or are fine with what they have. It all depends on the value of the hand. All the number cards’ values are equal to their number, and the three face cards, king, queen, and jack, are each worth ten. The goal is for the total value of the hand to reach as close as possible to 21 without going over. The players must be able to indicate whether they want to hit and receive another card, or stand and keep the cards they have, and the program must respond correctly to the prompts. It must also display that if the player’s hand busts and the value exceeds 21, the player has lost that round. 
3. (Ace Case) In Blackjack, all the cards have a set value, but the ace card is a little more complicated. The ace can have a value of 11 or 1, based on the circumstances around it. As the game is played, if an ace is dealt and the players hand is below a 10, the ace counts as an 11, otherwise, the ace is a 1. But it does not end there. If the game keeps playing with an 11 ace, and a card is dealt that will bust, the ace’s value can change to a 1, to keep the player in the game. The program needs to be able to adapt the value of the hand around these circumstances, without breaking the rules.
4. (Dealer Rules) 
5. (Display of the Cards) The final piece of the program is displaying all the cards for the user. The user needs to be able to see their hand and the value of it to assess their gameplay. The Dealer’s cards should also be visible, so the player can watch the round in full. All the cards in a deck of 52 will need to be designed and be easily recognized. This includes showing the rank and suit of the cards prominently. All of this put together will create a complete game of Blackjack. 
